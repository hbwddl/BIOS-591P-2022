while(i < max.iter){
print(paste("i",i))
deltat <- diag(-alpha,nrow=length(mu.t))
print(paste("delta dim",dim(deltat)))
w.t <- diag(alpha*as.vector(mu.t)^2)
print(paste("w dim",dim(w.t)))
z.t <- x.design %*% b.t + ginv(w.t) %*% deltat %*% (y-mu.t)
print(paste("z dim",dim(z.t)))
b.new <- ginv(t(x.design) %*% w.t %*% x.design) %*% t(x.design) %*% w.t %*% z.t
print(paste("bt+1 dim",dim(b.new)))
mu.new <- 1/(x.design %*% b.new)
print(paste("mut+1 dim",dim(mu.new)))
if(norm(b.new - b.t) < stop.threshold){
b.t <- b.new
mu.t <- mu.new
break()
}
b.t <- b.new
mu.t <- mu.new
i <- i+1
}
return(c(b.t,i))
}
irls.fit(y=y,x=x)
irls.fit <- function(y,x,alpha=1,startbeta=rep(1,ncol(as.matrix(x))+1),startmu=rep(1,nrow(as.matrix(y))),stop.threshold=0.00001,max.iter=10000){
i <- 1
x.design <- cbind(1, x)
print(paste("x dim",dim(x.design)))
b.t <- as.matrix(startbeta)
print(paste("bt dim",dim(b.t)))
mu.t <- as.matrix(startmu)
print(paste("mu dim",dim(mu.t)))
while(i < max.iter){
print(paste("i",i))
deltat <- diag(-alpha,nrow=length(mu.t))
print(paste("delta dim",dim(deltat)))
w.t <- diag(alpha*as.vector(mu.t)^2)
print(paste("w dim",dim(w.t)))
z.t <- x.design %*% b.t + ginv(w.t) %*% deltat %*% (y-mu.t)
print(paste("z dim",dim(z.t)))
b.new <- ginv(t(x.design) %*% w.t %*% x.design) %*% t(x.design) %*% w.t %*% z.t
print(paste("bt+1 dim",dim(b.new)))
mu.new <- 1/(x.design %*% b.new)
print(paste("mut+1 dim",dim(mu.new)))
if(norm(b.new - b.t) < stop.threshold){
b.t <- b.new
mu.t <- mu.new
break()
}
b.t <- b.new
mu.t <- mu.new
i <- i+1
}
mu.hat <- mu.t
w.hat <- diag(alpha*as.vector(mu.hat)^2)
cov.b <- ginv(t(x.design) %*% x.design)
return(c(b.t,cov.b,i))
}
irls.fit(y=y,x=x)
irls.fit <- function(y,x,alpha=1,startbeta=rep(1,ncol(as.matrix(x))+1),startmu=rep(1,nrow(as.matrix(y))),stop.threshold=0.00001,max.iter=10000){
i <- 1
x.design <- cbind(1, x)
print(paste("x dim",dim(x.design)))
b.t <- as.matrix(startbeta)
print(paste("bt dim",dim(b.t)))
mu.t <- as.matrix(startmu)
print(paste("mu dim",dim(mu.t)))
while(i < max.iter){
print(paste("i",i))
deltat <- diag(-alpha,nrow=length(mu.t))
print(paste("delta dim",dim(deltat)))
w.t <- diag(alpha*as.vector(mu.t)^2)
print(paste("w dim",dim(w.t)))
z.t <- x.design %*% b.t + ginv(w.t) %*% deltat %*% (y-mu.t)
print(paste("z dim",dim(z.t)))
b.new <- ginv(t(x.design) %*% w.t %*% x.design) %*% t(x.design) %*% w.t %*% z.t
print(paste("bt+1 dim",dim(b.new)))
mu.new <- 1/(x.design %*% b.new)
print(paste("mut+1 dim",dim(mu.new)))
if(norm(b.new - b.t) < stop.threshold){
b.t <- b.new
mu.t <- mu.new
break()
}
b.t <- b.new
mu.t <- mu.new
i <- i+1
}
mu.hat <- mu.t
w.hat <- diag(alpha*as.vector(mu.hat)^2)
cov.b <- ginv(t(x.design) %*% x.design)
return(list(b.t,cov.b,i))
}
irls.fit(y=y,x=x)
x = runif(n=n.obs, min=0, max=1)         # uniform predictors
eta = cbind(1, x) %*% beta.true          # intercept is added
mu = 1/eta                               # inverse link function
y = rgamma(n=n.obs, shape=alpha, scale=mu)   # check help '?rgamma'
alpha <- 1
x = runif(n=n.obs, min=0, max=1)         # uniform predictors
eta = cbind(1, x) %*% beta.true          # intercept is added
mu = 1/eta                               # inverse link function
y = rgamma(n=n.obs, shape=alpha, scale=mu)   # check help '?rgamma'
glm.output = glm(y~x, family=Gamma(link="inverse"), start=c(1,1)) # intercept is added automatically
glm.output
summary(glm.output)
glm.output$coefficients
coef(glm.output)
coefficients(glm.output)
summary(glm.output)
sqrt(0.01)
sqrt(0.013)
sqrt(0.012)
## Create Data
age <- c(6:16)
age
6:16
6:5
6:1
4.5:6
4.5:5
## Create Data
age <- c(6:16) # The : creates a sequence between two numbers
wgt <- c(0.029,0.052,0.079,0.125,0.181,0.261,0.425,0.738,1.13,1.882,2.812)
chickwts
chick_weight <- data.frame(age,wgt)
chick_weight
chick_weight <- data.frame(c(6:16),wgt)
chich_weight
chick_weight
?data.frame
names=c("age","wgt")
chick_weight <- data.frame(c(6:16),
c(0.029,0.052,0.079,0.125,0.181,0.261,0.425,0.738,1.13,1.882,2.812),
names=c("age","wgt"))
chick_weight <- data.frame(age=c(6:16),
wgt=c(0.029,0.052,0.079,0.125,0.181,0.261,0.425,0.738,1.13,1.882,2.812))
chich_weight
chick_weight
chick_weight$age
chick_weight$wgt
## Initial Descriptive Statistics
mean(chick_weight$age)
sd(chick_weight$age)
IQR(chick_weight$age)
?IQR
range(chick_weight$age)
hist(chick_weight$age,main="Histogram of Age")
hist(chick_weight$wgt,main="Histogram of Age")
plot(wgt~age,data=chick_weight)
plot(log(wgt)~age,data=chick_weight)
cor(wgt~age,data=chick_weight)
plot(wgt~age,data=chick_weight)
plot(chick_weight$wgt~chick_weight$age,data=chick_weight)
plot(wgt~age,data=chick_weight)
cor(chick_weight$age,chick_weight$wgt)
?cor
cor.test(chick_weight$age,chick_weight$wgt)
chick.r <- cor.test(chick_weight$age,chick_weight$wgt)
chick.r
chick.r$conf.int
# Fit SLR model--LM function
# Uses the ~ notation for the model formula--outcome (dependent) variable on the left
# Explanatory (independent) variable on the right of the ~
chick.lm <- lm(wgt ~ age,data=chick_weight)
# LM (linear model) object
str(chick.lm)
# Easy way to see summary
summary(chick.lm)
# Let's see the estimated coefficients
coefficients(chick.lm)
# Let's see the estimated coefficients
confint(coefficients(chick.lm))
# Let's see the estimated coefficients
confint(chick.lm)
cor(chick_weight$age,chick_weight$wgt)^2
confint(summary(chick.lm))
confint(chick.lm)
# Predict weight at 11 days
predict.lm(chick.lm,newdata=c(11))
# Predict weight at 11 days
predict.lm(chick.lm,newdata=data.frame(age=11)
)
# Predict weight at 11 days
confint(predict.lm(chick.lm,newdata=data.frame(age=11)))
confint
?confint
?predict
predict(chick.lm,newdata=median.chick,type="predict")
# Predict weight at 11 days
median.chick <- data.frame(age=11)
predict(chick.lm,newdata=median.chick,type="predict")
predict(chick.lm,newdata=median.chick,type="prediction")
predict(chick.lm,newdata=median.chick,interval="predict")
predict(chick.lm,newdata=median.chick,interval="confidence")
knitr::opts_chunk$set(echo = TRUE)
## Create a Data Frame
chick_weight <- data.frame("age"=c(6:16),
wgt=c(0.029,0.052,0.079,0.125,0.181,0.261,0.425,0.738,1.13,1.882,2.812))
chick_weight
## Create a Data Frame
chick_weight <- data.frame("age"=c(6:16),
"wgt"=c(0.029,0.052,0.079,0.125,0.181,0.261,0.425,0.738,1.13,1.882,2.812))
print(chick_weight)
chick_weight
source('~/Work/BIOS 591P 2021/R Materials/2 SLR/Chick_Weight_SLR.R')
plot(chick.lm)
chick_weight$age
age.vals <- seq(from=6,to=11,by=0.01)
weight.ci <- predict(chick.lm,newdata=age.vals,interval="confidence")
weight.pi <- predict(chick.lm,newdata=age.vals,interval="predict")
age.vals <- data.frame(seq(from=6,to=11,by=0.01))
age.vals <- data.frame(age=seq(from=6,to=11,by=0.01))
weight.ci <- predict(chick.lm,newdata=age.vals,interval="confidence")
weight.pi <- predict(chick.lm,newdata=age.vals,interval="predict")
plot(wgt~age,data=chick_weight)
plot(wgt~age,data=chick_weight,main="Weight vs. Age",xlab="Age (Days)",ylab="Chick Weight (lbs)")
plot(wgt~age,data=chick_weight,main="Weight vs. Age",xlab="Age (Days)",ylab="Chick Weight (lbs)",pch=19)
weight.ci
lines(weight.ci)
lines(age.vals,weight.ci)
age.vals
age.vals <- data.frame(age=seq(from=6,to=16,by=0.01))
weight.ci <- predict(chick.lm,newdata=age.vals,interval="confidence")
weight.pi <- predict(chick.lm,newdata=age.vals,interval="predict")
plot(wgt~age,data=chick_weight,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)",pch=19)
lines(age.vals,weight.ci)
# Plot confidence interval lines
lines(age.vals,weight.ci[,1],lty=2)
x
length(age.vals)
age.vals
nrow(age.vals)
nrow(weight.ci)
weight.ci
# Plot confidence interval lines
lines(age.vals,weight.ci[,2],lty=2)
dim(weight.ci[,2])
weight.ci[,2]
age.vals <- seq(from=6,to=16,by=0.01)
weight.ci <- predict(chick.lm,newdata=data.frame(age=age.vals),interval="confidence")
weight.pi <- predict(chick.lm,newdata=data.frame(age=age.vals),interval="predict")
plot(wgt~age,data=chick_weight,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)",pch=19)
# Plot confidence interval lines
lines(age.vals,weight.ci[,2],lty=2)
# Plot confidence interval lines
lines(age.vals,weight.ci[,2],lty=2)
lines(age.vals,weight.ci[,3],lty=2)
# Plot prediction interval lines
lines(age.vals,weight.pi[,2],lty=2)
lines(age.vals,weight.pi[,3],lty=2)
age.vals <- seq(from=6,to=16,by=0.01)
age.predict <- predict(chick.lm,newdata=data.frame(age=age.vals))
weight.ci <- predict(chick.lm,newdata=data.frame(age=age.vals),interval="confidence")
weight.pi <- predict(chick.lm,newdata=data.frame(age=age.vals),interval="predict")
age.predict
#Plot data
plot(wgt~age,data=chick_weight,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)",pch=19)
#Plot predicted values
lines(age.vals,age.predict,lty=2)
# Plot confidence interval lines
lines(age.vals,weight.ci[,2],lty=2)
lines(age.vals,weight.ci[,3],lty=2)
# Plot prediction interval lines
lines(age.vals,weight.pi[,2],lty=2)
lines(age.vals,weight.pi[,3],lty=2)
#Plot predicted values
lines(age.vals,age.predict)
# Plot confidence interval lines
lines(age.vals,weight.ci[,2],lty=2)
lines(age.vals,weight.ci[,3],lty=2)
# Plot prediction interval lines
lines(age.vals,weight.pi[,2],lty=2)
lines(age.vals,weight.pi[,3],lty=2)
#Plot data
plot(wgt~age,data=chick_weight,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)",pch=19)
#Plot predicted values
lines(age.vals,age.predict)
# Plot confidence interval lines
lines(age.vals,weight.ci[,2],lty=2)
lines(age.vals,weight.ci[,3],lty=2)
# Plot prediction interval lines
lines(age.vals,weight.pi[,2],lty=2)
lines(age.vals,weight.pi[,3],lty=2)
# Let's fix the plot x and y axes
plot(wgt~age,data=chick_weight,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)",pch=19,
ylim=c(-2,3))
# Let's fix the plot x and y axes
plot(wgt~age,data=chick_weight,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)",pch=19,
ylim=c(-2,3))
#Plot predicted values
lines(age.vals,age.predict)
# Plot confidence interval lines
lines(age.vals,weight.ci[,2],lty=2)
lines(age.vals,weight.ci[,3],lty=2)
# Plot prediction interval lines
lines(age.vals,weight.pi[,2],lty=2)
lines(age.vals,weight.pi[,3],lty=2)
# Let's fix the plot x and y axes
plot(wgt~age,data=chick_weight,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)",pch=19,
ylim=c(-2,3))
#Plot predicted values
lines(age.vals,age.predict,col="blue")
# Plot confidence interval lines
lines(age.vals,weight.ci[,2],lty=2)
lines(age.vals,weight.ci[,3],lty=2)
# Plot prediction interval lines
lines(age.vals,weight.pi[,2],lty=2)
lines(age.vals,weight.pi[,3],lty=2)
knitr::opts_chunk$set(echo = TRUE)
seq(from=6,to=16) # The : creates a sequence between two numbers
## Create a Data Frame
chick_weight <- data.frame("age"=seq(from=6,to=16),                   "wgt"=c(0.029,0.052,0.079,0.125,0.181,0.261,0.425,0.738,1.13,1.882,2.812))
print(chick_weight)
mean(chick_weight$age)
sd(chick_weight$age)
median(chick_weight$age)
IQR(chick_weight$age)
range(chick_weight$age)
mean(chick_weight$wgt)
sd(chick_weight$wgt)
median(chick_weight$wgt)
IQR(chick_weight$wgt)
range(chick_weight$wgt)
hist(chick_weight$age,main="Histogram of Age")
hist(chick_weight$wgt,main="Histogram of Weight")
plot(chick_weight$age,chick_weight$wgt,main="Weight vs. Age")
plot(chick_weight$age,chick_weight$wgt,main="Weight vs. Age",xlab="Age (days)",ylab="Weight (lbs)")
cor(chick_weight$age,chick_weight$wgt)
cor(chick_weight$age,chick_weight$wgt)^2
cor.test(chick_weight$age,chick_weight$wgt)
chick.lm <- lm(wgt ~ age,data=chick_weight)
str(chick.lm)
summary(chick.lm)
anova(chick.lm)
# Let's see the confidence intervals for estimated coefficients
confint(chick.lm)
# Predict weight at 11 days
median.chick <- data.frame(age=11)
predict(chick.lm,newdata=median.chick)
# Predict weight at 11 days
median.chick <- data.frame(age=11)
predict(chick.lm,newdata=median.chick)
predict(chick.lm,newdata=median.chick,interval="confidence")
?predict
predict(chick.lm,newdata=median.chick,interval="confidence",level=0.9)
age.vals <- data.frame(age=seq(from=6,to=16,by=0.01))
age.predict <- predict(chick.lm,newdata=age.vals)
weight.ci <- predict(chick.lm,newdata=age.vals,interval="confidence")
weight.pi <- predict(chick.lm,newdata=age.vals,interval="predict")
#Plot data
plot(wgt~age,data=chick_weight,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)",pch=19)
age.vals <- data.frame(age=seq(from=6,to=16,by=0.01))
age.predict <- predict(chick.lm,newdata=age.vals)
weight.ci <- predict(chick.lm,newdata=age.vals,interval="confidence")
weight.pi <- predict(chick.lm,newdata=age.vals,interval="predict")
#Plot data
plot(wgt~age,data=chick_weight,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)",pch=19)
#Plot predicted values
lines(age.vals,age.predict)
age.vals
age.vals$age
age.vals <- data.frame(age=seq(from=6,to=16,by=0.01))
age.predict <- predict(chick.lm,newdata=age.vals)
weight.ci <- predict(chick.lm,newdata=age.vals,interval="confidence")
weight.pi <- predict(chick.lm,newdata=age.vals,interval="predict")
#Plot data
plot(wgt~age,data=chick_weight,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)",pch=19)
#Plot predicted values
lines(age.vals$age,age.predict)
# Plot confidence interval lines
lines(age.vals$age,weight.ci[,2],lty=2)
lines(age.vals$age,weight.ci[,3],lty=2)
# Plot prediction interval lines
lines(age.vals$age,weight.pi[,2],lty=2)
lines(age.vals$age,weight.pi[,3],lty=2)
# Let's fix the plot x and y axes
plot(wgt~age,data=chick_weight,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)",pch=19,
ylim=c(-2,3))
#Plot predicted values
lines(age.vals$age,age.predict,col="blue")
# Plot confidence interval lines
lines(age.vals$age,weight.ci[,2],lty=2)
lines(age.vals$age,weight.ci[,3],lty=2)
# Plot prediction interval lines
lines(age.vals$age,weight.pi[,2],lty=2)
lines(age.vals$age,weight.pi[,3],lty=2)
#Plot data
plot(chick_weight$age,chick_weight$wgt,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)")
#Plot predicted values
lines(age.vals$age,age.predict)
plot(chick_weight$age,chick_weight$wgt,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)")
lines(age.vals$age,age.predict)
weight.ci
lines(age.vals$age,weight.ci$lwr)
weight.ci
typeof(weight.ci)
?predict
knitr::opts_chunk$set(echo = TRUE)
seq(from=6,to=16) # The : creates a sequence between two numbers
## Create a Data Frame
chick_weight <- data.frame("age"=seq(from=6,to=16),                   "wgt"=c(0.029,0.052,0.079,0.125,0.181,0.261,0.425,0.738,1.13,1.882,2.812))
print(chick_weight)
mean(chick_weight$age)
sd(chick_weight$age)
median(chick_weight$age)
IQR(chick_weight$age)
range(chick_weight$age)
mean(chick_weight$wgt)
sd(chick_weight$wgt)
median(chick_weight$wgt)
IQR(chick_weight$wgt)
range(chick_weight$wgt)
hist(chick_weight$age,main="Histogram of Age")
hist(chick_weight$wgt,main="Histogram of Weight")
plot(chick_weight$age,chick_weight$wgt,main="Weight vs. Age")
plot(chick_weight$age,chick_weight$wgt,main="Weight vs. Age",xlab="Age (days)",ylab="Weight (lbs)")
cor(chick_weight$age,chick_weight$wgt)
cor(chick_weight$age,chick_weight$wgt)^2
cor.test(chick_weight$age,chick_weight$wgt)
chick.lm <- lm(wgt ~ age,data=chick_weight)
summary(chick.lm)
anova(chick.lm)
# Let's see the confidence intervals for estimated coefficients
confint(chick.lm)
# Predict weight at 11 days
median.chick <- data.frame(age=11)
predict(chick.lm,newdata=median.chick)
predict(chick.lm,newdata=median.chick,interval="confidence")
predict(chick.lm,newdata=median.chick,interval="confidence",level=0.9)
age.vals <- data.frame(age=seq(from=6,to=16))
age.predict <- predict(chick.lm,newdata=age.vals)
weight.ci <- predict(chick.lm,newdata=age.vals,interval="confidence")
weight.pi <- predict(chick.lm,newdata=age.vals,interval="predict")
plot(chick_weight$age,chick_weight$wgt,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)")
plot(chick_weight$age,chick_weight$wgt,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)")
lines(age.vals$age,age.predict)
weight.ci
plot(chick_weight$age,chick_weight$wgt,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)")
lines(age.vals$age,age.predict)
lines(age.vals$age,weight.ci[,2])
lines(age.vals$age,weight.ci[,3])
# Plot prediction interval lines
plot(chick_weight$age,chick_weight$wgt,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)")
lines(age.vals$age,age.predict)
lines(age.vals$age,weight.pi[,2],lty=2)
lines(age.vals$age,weight.pi[,3],lty=2)
plot(wgt~age,data=chick_weight,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)",pch=19,
ylim=c(-2,3))
lines(age.vals$age,age.predict)
lines(age.vals$age,weight.ci[,2],lty=2)
lines(age.vals$age,weight.ci[,3],lty=2)
plot(wgt~age,data=chick_weight,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)",
ylim=c(-2,3))
lines(age.vals$age,age.predict)
lines(age.vals$age,weight.ci[,2],lty=2)
lines(age.vals$age,weight.ci[,3],lty=2)
plot(wgt~age,data=chick_weight,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)",
ylim=c(-2,3))
lines(age.vals$age,age.predict)
lines(age.vals$age,weight.ci[,2],lty=2)
lines(age.vals$age,weight.ci[,3],lty=2)
lines(age.vals$age,weight.pi[,2],lty=2)
lines(age.vals$age,weight.pi[,3],lty=2)
getwd()
setwd("~/Work/BIOS 591P 2021/R Materials/2 SLR")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/Work/BIOS 591P 2021/R Materials/2 SLR")
plot(wgt~age,data=chick_weight,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)",
ylim=c(-2,3),pch=19)
lines(age.vals$age,age.predict)
lines(age.vals$age,weight.ci[,2],lty=2)
lines(age.vals$age,weight.ci[,3],lty=2)
lines(age.vals$age,weight.pi[,2],lty=2)
lines(age.vals$age,weight.pi[,3],lty=2)
plot(wgt~age,data=chick_weight,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)",
ylim=c(-2,3),pch=19)
lines(age.vals$age,age.predict,col="blue")
lines(age.vals$age,weight.ci[,2],lty=2)
lines(age.vals$age,weight.ci[,3],lty=2)
lines(age.vals$age,weight.pi[,2],lty=2)
lines(age.vals$age,weight.pi[,3],lty=2)
plot(wgt~age,data=chick_weight,main="Weight vs. Age",
xlab="Age (Days)",ylab="Chick Weight (lbs)",
ylim=c(-2,3),pch=19)
lines(age.vals$age,age.predict,col="blue")
lines(age.vals$age,weight.ci[,2],lty=2)
lines(age.vals$age,weight.ci[,3],lty=2)
lines(age.vals$age,weight.pi[,2],lty=2)
lines(age.vals$age,weight.pi[,3],lty=2)
